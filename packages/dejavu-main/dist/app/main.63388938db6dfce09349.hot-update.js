webpackHotUpdate("main",{

/***/ "../browser/lib/components/ConnectApp/ConnectApp.js":
/*!**********************************************************!*\
  !*** ../browser/lib/components/ConnectApp/ConnectApp.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;__webpack_require__(/*! core-js/modules/es6.regexp.to-string */ \"../../node_modules/core-js/modules/es6.regexp.to-string.js\");__webpack_require__(/*! core-js/modules/es7.symbol.async-iterator */ \"../../node_modules/core-js/modules/es7.symbol.async-iterator.js\");__webpack_require__(/*! core-js/modules/es6.symbol */ \"../../node_modules/core-js/modules/es6.symbol.js\");__webpack_require__(/*! core-js/modules/web.dom.iterable */ \"../../node_modules/core-js/modules/web.dom.iterable.js\");__webpack_require__(/*! antd/es/alert/style/css */ \"../../node_modules/antd/es/alert/style/css.js\");var _alert=_interopRequireDefault(__webpack_require__(/*! antd/es/alert */ \"../../node_modules/antd/es/alert/index.js\"));__webpack_require__(/*! antd/es/modal/style/css */ \"../../node_modules/antd/es/modal/style/css.js\");var _modal=_interopRequireDefault(__webpack_require__(/*! antd/es/modal */ \"../../node_modules/antd/es/modal/index.js\"));var _emotion=__webpack_require__(/*! emotion */ \"../../node_modules/emotion/dist/index.esm.js\");__webpack_require__(/*! antd/es/icon/style/css */ \"../../node_modules/antd/es/icon/style/css.js\");var _icon=_interopRequireDefault(__webpack_require__(/*! antd/es/icon */ \"../../node_modules/antd/es/icon/index.js\"));__webpack_require__(/*! antd/es/auto-complete/style/css */ \"../../node_modules/antd/es/auto-complete/style/css.js\");var _autoComplete=_interopRequireDefault(__webpack_require__(/*! antd/es/auto-complete */ \"../../node_modules/antd/es/auto-complete/index.js\"));__webpack_require__(/*! antd/es/button/style/css */ \"../../node_modules/antd/es/button/style/css.js\");var _button=_interopRequireDefault(__webpack_require__(/*! antd/es/button */ \"../../node_modules/antd/es/button/index.js\"));__webpack_require__(/*! core-js/modules/es6.regexp.search */ \"../../node_modules/core-js/modules/es6.regexp.search.js\");__webpack_require__(/*! antd/es/input/style/css */ \"../../node_modules/antd/es/input/style/css.js\");var _input=_interopRequireDefault(__webpack_require__(/*! antd/es/input */ \"../../node_modules/antd/es/input/index.js\"));__webpack_require__(/*! antd/es/form/style/css */ \"../../node_modules/antd/es/form/style/css.js\");var _form=_interopRequireDefault(__webpack_require__(/*! antd/es/form */ \"../../node_modules/antd/es/form/index.js\"));var _react=_interopRequireWildcard(__webpack_require__(/*! react */ \"../../node_modules/react/index.js\"));var _reactRedux=__webpack_require__(/*! react-redux */ \"../../node_modules/react-redux/es/index.js\");var _propTypes=__webpack_require__(/*! prop-types */ \"../../node_modules/prop-types/index.js\");var _media=__webpack_require__(/*! @divyanshu013/media */ \"../../node_modules/@divyanshu013/media/lib/index.es.js\");var _reactRouterDom=__webpack_require__(/*! react-router-dom */ \"../../node_modules/react-router-dom/es/index.js\");var _app=__webpack_require__(/*! ../../reducers/app */ \"../browser/lib/reducers/app.js\");var _actions=__webpack_require__(/*! ../../actions */ \"../browser/lib/actions/index.js\");var _utils=__webpack_require__(/*! ../../utils */ \"../browser/lib/utils/index.js\");var _mode=__webpack_require__(/*! ../../reducers/mode */ \"../browser/lib/reducers/mode.js\");var _constants=__webpack_require__(/*! ../../constants */ \"../browser/lib/constants/index.js\");var _Flex=_interopRequireDefault(__webpack_require__(/*! ../Flex */ \"../browser/lib/components/Flex/index.js\"));function _getRequireWildcardCache(){if(typeof WeakMap!==\"function\")return null;var cache=new WeakMap();_getRequireWildcardCache=function _getRequireWildcardCache(){return cache;};return cache;}function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}var cache=_getRequireWildcardCache();if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};if(obj!=null){var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _toConsumableArray(arr){return _arrayWithoutHoles(arr)||_iterableToArray(arr)||_nonIterableSpread();}function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\");}function _iterableToArray(iter){if(Symbol.iterator in Object(iter)||Object.prototype.toString.call(iter)===\"[object Arguments]\")return Array.from(iter);}function _arrayWithoutHoles(arr){if(Array.isArray(arr)){for(var i=0,arr2=new Array(arr.length);i<arr.length;i++)arr2[i]=arr[i];return arr2;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}const{Item}=_form.default;const{Group}=_input.default;const formItemProps={wrapperCol:{xs:{span:24}}};const ROUTES_WITHOUT_MULTIPLE_INDEX=['/mappings','/preview','/query'];const shouldConnect=(pathname,appname)=>{let isConnecting=false;if(ROUTES_WITHOUT_MULTIPLE_INDEX.indexOf(pathname)===-1){isConnecting=true;}else if(!(0,_utils.isMultiIndexApp)(appname)){isConnecting=true;}else{isConnecting=false;}return isConnecting;};class ConnectApp extends _react.Component{constructor(){super(...arguments);_defineProperty(this,\"state\",{appname:this.props.appname||'',url:this.props.url||'',pastApps:[],isShowingAppSwitcher:true,isUrlHidden:false,isShowingHeadersModal:false,customHeaders:this.props.headers.length?this.props.headers:[{key:'',value:''}]});_defineProperty(this,\"setAppSwitcher\",isShowingAppSwitcher=>{this.setState({isShowingAppSwitcher});});_defineProperty(this,\"setPastConnections\",()=>{const pastConnections=JSON.parse(// $FlowFixMe\n(0,_utils.getLocalStorageItem)(_constants.LOCAL_CONNECTIONS)||{});this.setState({pastApps:(pastConnections||{}).pastApps||[]});});_defineProperty(this,\"handleChange\",e=>{const{value,name}=e.target;this.setState({[name]:value});});_defineProperty(this,\"handleAppNameChange\",appname=>{const{pastApps}=this.state;const pastApp=pastApps.find(app=>app.appname===appname);if(pastApp){this.setState({url:pastApp.url,customHeaders:pastApp.headers||[]});}this.setState({appname});});_defineProperty(this,\"handleSubmit\",e=>{e.preventDefault();const{appname,url,customHeaders}=this.state;const{sidebar,appswitcher,footer,route}=(0,_utils.getUrlParams)(window.location.search);const{pathname}=this.props.location;let searchQuery='?';if(sidebar){searchQuery+=\"&sidebar=\".concat(sidebar);}if(footer){searchQuery+=\"&sidebar=\".concat(footer);}if(appswitcher){searchQuery+=\"&appswitcher=\".concat(appswitcher);}if(route){searchQuery+=\"&route=\".concat(route);}if(this.props.isConnected){this.props.disconnectApp();this.props.setMode(_constants.MODES.VIEW);this.props.setHeaders([]);// this.setState({\n// \tcustomHeaders: [{ key: '', value: '' }],\n// \tappname: '',\n// \turl: '',\n// });\nthis.props.history.push({search:(0,_utils.normalizeSearchQuery)(searchQuery)});// window.location.reload(true);\n}else if(appname&&url){if(shouldConnect(pathname,appname)){this.props.connectApp(appname,url);this.props.setHeaders(customHeaders);// update history with correct appname and url\nsearchQuery+=\"&appname=\".concat(appname,\"&url=\").concat(url,\"&mode=\").concat(this.props.mode);const{pastApps}=this.state;const newApps=_toConsumableArray(pastApps);const pastApp=pastApps.find(app=>app.appname===appname);if(!pastApp){newApps.push({appname,url,headers:customHeaders.filter(item=>item.key.trim()&&item.value.trim())});}else{const appIndex=newApps.findIndex(item=>item.appname===appname);newApps[appIndex]={appname,url,headers:customHeaders.filter(item=>item.key.trim()&&item.value.trim())};}this.setState({pastApps:newApps});(0,_utils.setLocalStorageData)(_constants.LOCAL_CONNECTIONS,JSON.stringify({pastApps:newApps}));this.props.history.push({search:(0,_utils.normalizeSearchQuery)(searchQuery)});if(this.props.isHidden){this.setAppSwitcher(false);}}else{this.props.setError({message:'Sorry can not connect to the app with multiple indexes',description:'Please try using single index'});}}});_defineProperty(this,\"handleUrlToggle\",()=>{this.setState(_ref=>{let{isUrlHidden}=_ref;return{isUrlHidden:!isUrlHidden};});});_defineProperty(this,\"toggleHeadersModal\",()=>{this.setState(_ref2=>{let{isShowingHeadersModal}=_ref2;return{isShowingHeadersModal:!isShowingHeadersModal};});});_defineProperty(this,\"handleHeaderItemChange\",(e,index,field)=>{const{target:{value}}=e;const{customHeaders}=this.state;this.setState({customHeaders:[].concat(_toConsumableArray(customHeaders.slice(0,index)),[_objectSpread({},customHeaders[index],{[field]:value})],_toConsumableArray(customHeaders.slice(index+1)))});});_defineProperty(this,\"handleHeadersSubmit\",()=>{const{customHeaders}=this.state;const filteredHeaders=customHeaders.filter(item=>item.key.trim()&&item.value.trim());const{isConnected}=this.props;if(isConnected){const{pastApps}=JSON.parse((0,_utils.getLocalStorageItem)(_constants.LOCAL_CONNECTIONS));const currentApp=pastApps.findIndex(item=>item.appname===this.props.appname);pastApps[currentApp].headers=filteredHeaders;(0,_utils.setLocalStorageData)(_constants.LOCAL_CONNECTIONS,JSON.stringify({pastApps}));}this.props.setHeaders(filteredHeaders);this.toggleHeadersModal();});_defineProperty(this,\"handleHeaderAfterClose\",()=>{this.setState({customHeaders:this.props.headers.length?this.props.headers:[{key:'',value:''}]});});_defineProperty(this,\"addMoreHeader\",()=>{const{customHeaders}=this.state;this.setState({customHeaders:[].concat(_toConsumableArray(customHeaders),[{key:'',value:''}])});});_defineProperty(this,\"handleRemoveHeader\",index=>{const{customHeaders}=this.state;this.setState({customHeaders:[].concat(_toConsumableArray(customHeaders.slice(0,index)),_toConsumableArray(customHeaders.slice(index+1)))});});}componentDidMount(){// sync state from url\nlet appname='';let url='';const{mode,isConnected,isHidden}=this.props;const{appname:queryApp,url:queryUrl,mode:queryMode,sidebar,footer,appswitcher,route}=(0,_utils.getUrlParams)(window.location.search);if(queryApp&&queryUrl){appname=queryApp;url=queryUrl;}else{const{appname:propApp,url:propUrl}=this.props;appname=propApp||'';url=propUrl||'';}this.setState({appname,url});if(appname&&url&&!isConnected){const{pathname}=this.props.location;if(shouldConnect(pathname,appname)){this.props.connectApp(appname,url);(0,_utils.saveAppToLocalStorage)(appname,url);if(isHidden){this.setAppSwitcher(false);}}else{this.props.setError({message:'Sorry can not connect to the app with multiple indexes',description:'Please try using single index'});}}if(isConnected&&isHidden){this.setAppSwitcher(false);}if(!queryApp&&!queryUrl){let searchQuery=\"?appname=\".concat(appname,\"&url=\").concat(url);const currentMode=queryMode||mode;searchQuery+=\"&mode=\".concat(currentMode);if(sidebar){searchQuery+=\"&sidebar=\".concat(sidebar);}if(footer){searchQuery+=\"&footer=\".concat(footer);}if(appswitcher){searchQuery+=\"&appswitcher=\".concat(appswitcher);}if(route){searchQuery+=\"&route=\".concat(route);}this.props.setMode(currentMode);this.props.history.push({search:(0,_utils.normalizeSearchQuery)(searchQuery)});}if(queryMode){this.props.setMode(queryMode);}if(appswitcher&&appswitcher==='false'){this.setAppSwitcher(false);}const customHeaders=(0,_utils.getCustomHeaders)(appname);this.props.setHeaders(customHeaders);this.setState({customHeaders:customHeaders.length?customHeaders:[{key:'',value:''}]});this.setPastConnections();}render(){const{appname,url,pastApps,isShowingAppSwitcher,isUrlHidden,isShowingHeadersModal,customHeaders}=this.state;const{isLoading,isConnected}=this.props;return _react.default.createElement(\"div\",null,isShowingAppSwitcher&&_react.default.createElement(_form.default,{layout:\"inline\",onSubmit:this.handleSubmit},_react.default.createElement(_Flex.default,{alignItems:\"center\"},_react.default.createElement(Item,_extends({},formItemProps,{className:(0,_emotion.css)({[_media.mediaMin.medium]:{flex:1}},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")}),_react.default.createElement(Group,{compact:true,className:(0,_emotion.css)({display:'flex !important'},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},_react.default.createElement(_input.default,{name:\"url\",value:url,placeholder:\"URL for cluster goes here. e.g.  https://username:password@scalr.api.appbase.io\",onChange:this.handleChange,disabled:isConnected,required:true,className:(0,_emotion.css)({color:isUrlHidden&&isConnected&&'transparent !important'},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")}),_react.default.createElement(_button.default,{className:(0,_emotion.css)({cursor:'pointer','&:hover':{borderColor:'#d9d9d9 !important'}},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),onClick:this.handleUrlToggle},_react.default.createElement(\"i\",{className:\"fa \".concat(isUrlHidden?'fa-eye-slash':'fa-eye')})),_react.default.createElement(_button.default,{type:\"button\",className:(0,_emotion.css)({'&:hover':{borderColor:'#d9d9d9 !important'}},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),onClick:this.toggleHeadersModal},\"Headers\"))),_react.default.createElement(Item,_extends({},formItemProps,{className:(0,_emotion.css)({[_media.mediaMin.medium]:{flex:0.35}},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")}),_react.default.createElement(_autoComplete.default,{dataSource:pastApps.map(app=>app.appname),value:appname,placeholder:\"Appname (aka index) goes here\",filterOption:(inputValue,option)=>option.props.children.toUpperCase().indexOf(inputValue.toUpperCase())!==-1,onChange:this.handleAppNameChange,disabled:isConnected})),_react.default.createElement(Item,{className:(0,_emotion.css)({marginRight:'0px !important'},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},_react.default.createElement(_button.default,{type:isConnected?'danger':'primary',htmlType:\"submit\",icon:isConnected?'pause-circle':'play-circle',disabled:!(appname&&url),loading:isLoading},isConnected?'Disconnect':'Connect')),_react.default.createElement(_modal.default,{visible:isShowingHeadersModal,onCancel:this.toggleHeadersModal,onOk:this.handleHeadersSubmit,maskClosable:false,destroyOnClose:true,title:\"Add Custom Headers\",className:(0,_emotion.css)({top:10},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),closable:false,afterClose:this.handleHeaderAfterClose},_react.default.createElement(\"div\",{className:(0,_emotion.css)({maxHeight:'500px',overflow:'auto',paddingRight:10},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},_react.default.createElement(_Flex.default,{className:(0,_emotion.css)({marginBottom:10},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},_react.default.createElement(\"div\",{className:(0,_emotion.css)({flex:1,marginLeft:5},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},\"Key\"),_react.default.createElement(\"div\",{className:(0,_emotion.css)({marginLeft:10,flex:1},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0Nvbm5lY3RBcHAvQ29ubmVjdEFwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrakJXIiwiZmlsZSI6Ii4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0Nvbm5lY3RBcHAvQ29ubmVjdEFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEBmbG93XG5cbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGb3JtLCBCdXR0b24sIEFsZXJ0LCBBdXRvQ29tcGxldGUsIElucHV0LCBNb2RhbCwgSWNvbiB9IGZyb20gJ2FudGQnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IG9iamVjdCB9IGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgbWVkaWFNaW4gfSBmcm9tICdAZGl2eWFuc2h1MDEzL21lZGlhJztcblxuaW1wb3J0IHsgd2l0aFJvdXRlciB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuaW1wb3J0IHtcblx0Z2V0QXBwbmFtZSxcblx0Z2V0VXJsLFxuXHRnZXRJc0xvYWRpbmcsXG5cdGdldElzQ29ubmVjdGVkLFxuXHRnZXRIZWFkZXJzLFxufSBmcm9tICcuLi8uLi9yZWR1Y2Vycy9hcHAnO1xuaW1wb3J0IHtcblx0Y29ubmVjdEFwcCxcblx0ZGlzY29ubmVjdEFwcCxcblx0c2V0TW9kZSxcblx0c2V0RXJyb3IsXG5cdHNldEhlYWRlcnMsXG59IGZyb20gJy4uLy4uL2FjdGlvbnMnO1xuaW1wb3J0IHtcblx0Z2V0VXJsUGFyYW1zLFxuXHRnZXRMb2NhbFN0b3JhZ2VJdGVtLFxuXHRzZXRMb2NhbFN0b3JhZ2VEYXRhLFxuXHRnZXRDdXN0b21IZWFkZXJzLFxuXHRpc011bHRpSW5kZXhBcHAsXG5cdHNhdmVBcHBUb0xvY2FsU3RvcmFnZSxcblx0bm9ybWFsaXplU2VhcmNoUXVlcnksXG59IGZyb20gJy4uLy4uL3V0aWxzJztcblxuaW1wb3J0IHsgZ2V0TW9kZSB9IGZyb20gJy4uLy4uL3JlZHVjZXJzL21vZGUnO1xuaW1wb3J0IHsgTE9DQUxfQ09OTkVDVElPTlMsIE1PREVTIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnLi4vRmxleCc7XG5cbnR5cGUgUHJvcHMgPSB7XG5cdGFwcG5hbWU/OiBzdHJpbmcsXG5cdHVybD86IHN0cmluZyxcblx0Y29ubmVjdEFwcDogKHN0cmluZywgc3RyaW5nKSA9PiB2b2lkLFxuXHRkaXNjb25uZWN0QXBwOiAoKSA9PiB2b2lkLFxuXHRpc0Nvbm5lY3RlZDogYm9vbGVhbixcblx0aXNMb2FkaW5nOiBib29sZWFuLFxuXHRlcnJvcj86IG9iamVjdCxcblx0aGlzdG9yeTogb2JqZWN0LFxuXHRtb2RlOiBzdHJpbmcsXG5cdHNldE1vZGU6IHN0cmluZyA9PiB2b2lkLFxuXHRvbkVycm9yQ2xvc2U6ICgpID0+IHZvaWQsXG5cdGxvY2F0aW9uOiBhbnksXG5cdGlzSGlkZGVuPzogYm9vbGVhbixcblx0c2V0RXJyb3I6IGFueSA9PiB2b2lkLFxuXHRoZWFkZXJzOiBhbnlbXSxcblx0c2V0SGVhZGVyczogYW55ID0+IHZvaWQsXG59O1xuXG50eXBlIFN0YXRlID0ge1xuXHRhcHBuYW1lOiBzdHJpbmcsXG5cdHVybDogc3RyaW5nLFxuXHRwYXN0QXBwczogYW55W10sXG5cdGlzU2hvd2luZ0FwcFN3aXRjaGVyOiBib29sZWFuLFxuXHRpc1VybEhpZGRlbjogYm9vbGVhbixcblx0aXNTaG93aW5nSGVhZGVyc01vZGFsOiBib29sZWFuLFxuXHRjdXN0b21IZWFkZXJzOiBhbnlbXSxcbn07XG5cbmNvbnN0IHsgSXRlbSB9ID0gRm9ybTtcbmNvbnN0IHsgR3JvdXAgfSA9IElucHV0O1xuXG5jb25zdCBmb3JtSXRlbVByb3BzID0ge1xuXHR3cmFwcGVyQ29sOiB7XG5cdFx0eHM6IHtcblx0XHRcdHNwYW46IDI0LFxuXHRcdH0sXG5cdH0sXG59O1xuXG5jb25zdCBST1VURVNfV0lUSE9VVF9NVUxUSVBMRV9JTkRFWCA9IFsnL21hcHBpbmdzJywgJy9wcmV2aWV3JywgJy9xdWVyeSddO1xuXG5jb25zdCBzaG91bGRDb25uZWN0ID0gKHBhdGhuYW1lLCBhcHBuYW1lKSA9PiB7XG5cdGxldCBpc0Nvbm5lY3RpbmcgPSBmYWxzZTtcblxuXHRpZiAoUk9VVEVTX1dJVEhPVVRfTVVMVElQTEVfSU5ERVguaW5kZXhPZihwYXRobmFtZSkgPT09IC0xKSB7XG5cdFx0aXNDb25uZWN0aW5nID0gdHJ1ZTtcblx0fSBlbHNlIGlmICghaXNNdWx0aUluZGV4QXBwKGFwcG5hbWUpKSB7XG5cdFx0aXNDb25uZWN0aW5nID0gdHJ1ZTtcblx0fSBlbHNlIHtcblx0XHRpc0Nvbm5lY3RpbmcgPSBmYWxzZTtcblx0fVxuXG5cdHJldHVybiBpc0Nvbm5lY3Rpbmc7XG59O1xuXG5jbGFzcyBDb25uZWN0QXBwIGV4dGVuZHMgQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xuXHRzdGF0ZSA9IHtcblx0XHRhcHBuYW1lOiB0aGlzLnByb3BzLmFwcG5hbWUgfHwgJycsXG5cdFx0dXJsOiB0aGlzLnByb3BzLnVybCB8fCAnJyxcblx0XHRwYXN0QXBwczogW10sXG5cdFx0aXNTaG93aW5nQXBwU3dpdGNoZXI6IHRydWUsXG5cdFx0aXNVcmxIaWRkZW46IGZhbHNlLFxuXHRcdGlzU2hvd2luZ0hlYWRlcnNNb2RhbDogZmFsc2UsXG5cdFx0Y3VzdG9tSGVhZGVyczogdGhpcy5wcm9wcy5oZWFkZXJzLmxlbmd0aFxuXHRcdFx0PyB0aGlzLnByb3BzLmhlYWRlcnNcblx0XHRcdDogW3sga2V5OiAnJywgdmFsdWU6ICcnIH1dLFxuXHR9O1xuXG5cdGNvbXBvbmVudERpZE1vdW50KCkge1xuXHRcdC8vIHN5bmMgc3RhdGUgZnJvbSB1cmxcblx0XHRsZXQgYXBwbmFtZSA9ICcnO1xuXHRcdGxldCB1cmwgPSAnJztcblx0XHRjb25zdCB7IG1vZGUsIGlzQ29ubmVjdGVkLCBpc0hpZGRlbiB9ID0gdGhpcy5wcm9wcztcblx0XHRjb25zdCB7XG5cdFx0XHRhcHBuYW1lOiBxdWVyeUFwcCxcblx0XHRcdHVybDogcXVlcnlVcmwsXG5cdFx0XHRtb2RlOiBxdWVyeU1vZGUsXG5cdFx0XHRzaWRlYmFyLFxuXHRcdFx0Zm9vdGVyLFxuXHRcdFx0YXBwc3dpdGNoZXIsXG5cdFx0XHRyb3V0ZSxcblx0XHR9ID0gZ2V0VXJsUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpO1xuXG5cdFx0aWYgKHF1ZXJ5QXBwICYmIHF1ZXJ5VXJsKSB7XG5cdFx0XHRhcHBuYW1lID0gcXVlcnlBcHA7XG5cdFx0XHR1cmwgPSBxdWVyeVVybDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc3QgeyBhcHBuYW1lOiBwcm9wQXBwLCB1cmw6IHByb3BVcmwgfSA9IHRoaXMucHJvcHM7XG5cdFx0XHRhcHBuYW1lID0gcHJvcEFwcCB8fCAnJztcblx0XHRcdHVybCA9IHByb3BVcmwgfHwgJyc7XG5cdFx0fVxuXG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRhcHBuYW1lLFxuXHRcdFx0dXJsLFxuXHRcdH0pO1xuXG5cdFx0aWYgKGFwcG5hbWUgJiYgdXJsICYmICFpc0Nvbm5lY3RlZCkge1xuXHRcdFx0Y29uc3QgeyBwYXRobmFtZSB9ID0gdGhpcy5wcm9wcy5sb2NhdGlvbjtcblxuXHRcdFx0aWYgKHNob3VsZENvbm5lY3QocGF0aG5hbWUsIGFwcG5hbWUpKSB7XG5cdFx0XHRcdHRoaXMucHJvcHMuY29ubmVjdEFwcChhcHBuYW1lLCB1cmwpO1xuXHRcdFx0XHRzYXZlQXBwVG9Mb2NhbFN0b3JhZ2UoYXBwbmFtZSwgdXJsKTtcblxuXHRcdFx0XHRpZiAoaXNIaWRkZW4pIHtcblx0XHRcdFx0XHR0aGlzLnNldEFwcFN3aXRjaGVyKGZhbHNlKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5wcm9wcy5zZXRFcnJvcih7XG5cdFx0XHRcdFx0bWVzc2FnZTpcblx0XHRcdFx0XHRcdCdTb3JyeSBjYW4gbm90IGNvbm5lY3QgdG8gdGhlIGFwcCB3aXRoIG11bHRpcGxlIGluZGV4ZXMnLFxuXHRcdFx0XHRcdGRlc2NyaXB0aW9uOiAnUGxlYXNlIHRyeSB1c2luZyBzaW5nbGUgaW5kZXgnLFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoaXNDb25uZWN0ZWQgJiYgaXNIaWRkZW4pIHtcblx0XHRcdHRoaXMuc2V0QXBwU3dpdGNoZXIoZmFsc2UpO1xuXHRcdH1cblxuXHRcdGlmICghcXVlcnlBcHAgJiYgIXF1ZXJ5VXJsKSB7XG5cdFx0XHRsZXQgc2VhcmNoUXVlcnkgPSBgP2FwcG5hbWU9JHthcHBuYW1lfSZ1cmw9JHt1cmx9YDtcblx0XHRcdGNvbnN0IGN1cnJlbnRNb2RlID0gcXVlcnlNb2RlIHx8IG1vZGU7XG5cdFx0XHRzZWFyY2hRdWVyeSArPSBgJm1vZGU9JHtjdXJyZW50TW9kZX1gO1xuXG5cdFx0XHRpZiAoc2lkZWJhcikge1xuXHRcdFx0XHRzZWFyY2hRdWVyeSArPSBgJnNpZGViYXI9JHtzaWRlYmFyfWA7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChmb290ZXIpIHtcblx0XHRcdFx0c2VhcmNoUXVlcnkgKz0gYCZmb290ZXI9JHtmb290ZXJ9YDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGFwcHN3aXRjaGVyKSB7XG5cdFx0XHRcdHNlYXJjaFF1ZXJ5ICs9IGAmYXBwc3dpdGNoZXI9JHthcHBzd2l0Y2hlcn1gO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAocm91dGUpIHtcblx0XHRcdFx0c2VhcmNoUXVlcnkgKz0gYCZyb3V0ZT0ke3JvdXRlfWA7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMucHJvcHMuc2V0TW9kZShjdXJyZW50TW9kZSk7XG5cdFx0XHR0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG5cdFx0XHRcdHNlYXJjaDogbm9ybWFsaXplU2VhcmNoUXVlcnkoc2VhcmNoUXVlcnkpLFxuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0aWYgKHF1ZXJ5TW9kZSkge1xuXHRcdFx0dGhpcy5wcm9wcy5zZXRNb2RlKHF1ZXJ5TW9kZSk7XG5cdFx0fVxuXG5cdFx0aWYgKGFwcHN3aXRjaGVyICYmIGFwcHN3aXRjaGVyID09PSAnZmFsc2UnKSB7XG5cdFx0XHR0aGlzLnNldEFwcFN3aXRjaGVyKGZhbHNlKTtcblx0XHR9XG5cblx0XHRjb25zdCBjdXN0b21IZWFkZXJzID0gZ2V0Q3VzdG9tSGVhZGVycyhhcHBuYW1lKTtcblx0XHR0aGlzLnByb3BzLnNldEhlYWRlcnMoY3VzdG9tSGVhZGVycyk7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRjdXN0b21IZWFkZXJzOiBjdXN0b21IZWFkZXJzLmxlbmd0aFxuXHRcdFx0XHQ/IGN1c3RvbUhlYWRlcnNcblx0XHRcdFx0OiBbeyBrZXk6ICcnLCB2YWx1ZTogJycgfV0sXG5cdFx0fSk7XG5cdFx0dGhpcy5zZXRQYXN0Q29ubmVjdGlvbnMoKTtcblx0fVxuXG5cdHNldEFwcFN3aXRjaGVyID0gaXNTaG93aW5nQXBwU3dpdGNoZXIgPT4ge1xuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0aXNTaG93aW5nQXBwU3dpdGNoZXIsXG5cdFx0fSk7XG5cdH07XG5cblx0c2V0UGFzdENvbm5lY3Rpb25zID0gKCkgPT4ge1xuXHRcdGNvbnN0IHBhc3RDb25uZWN0aW9ucyA9IEpTT04ucGFyc2UoXG5cdFx0XHQvLyAkRmxvd0ZpeE1lXG5cdFx0XHRnZXRMb2NhbFN0b3JhZ2VJdGVtKExPQ0FMX0NPTk5FQ1RJT05TKSB8fCB7fSxcblx0XHQpO1xuXG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRwYXN0QXBwczogKHBhc3RDb25uZWN0aW9ucyB8fCB7fSkucGFzdEFwcHMgfHwgW10sXG5cdFx0fSk7XG5cdH07XG5cblx0aGFuZGxlQ2hhbmdlID0gZSA9PiB7XG5cdFx0Y29uc3QgeyB2YWx1ZSwgbmFtZSB9ID0gZS50YXJnZXQ7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRbbmFtZV06IHZhbHVlLFxuXHRcdH0pO1xuXHR9O1xuXG5cdGhhbmRsZUFwcE5hbWVDaGFuZ2UgPSBhcHBuYW1lID0+IHtcblx0XHRjb25zdCB7IHBhc3RBcHBzIH0gPSB0aGlzLnN0YXRlO1xuXHRcdGNvbnN0IHBhc3RBcHAgPSBwYXN0QXBwcy5maW5kKGFwcCA9PiBhcHAuYXBwbmFtZSA9PT0gYXBwbmFtZSk7XG5cblx0XHRpZiAocGFzdEFwcCkge1xuXHRcdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRcdHVybDogcGFzdEFwcC51cmwsXG5cdFx0XHRcdGN1c3RvbUhlYWRlcnM6IHBhc3RBcHAuaGVhZGVycyB8fCBbXSxcblx0XHRcdH0pO1xuXHRcdH1cblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdGFwcG5hbWUsXG5cdFx0fSk7XG5cdH07XG5cblx0aGFuZGxlU3VibWl0ID0gZSA9PiB7XG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGNvbnN0IHsgYXBwbmFtZSwgdXJsLCBjdXN0b21IZWFkZXJzIH0gPSB0aGlzLnN0YXRlO1xuXHRcdGNvbnN0IHsgc2lkZWJhciwgYXBwc3dpdGNoZXIsIGZvb3Rlciwgcm91dGUgfSA9IGdldFVybFBhcmFtcyhcblx0XHRcdHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gsXG5cdFx0KTtcblx0XHRjb25zdCB7IHBhdGhuYW1lIH0gPSB0aGlzLnByb3BzLmxvY2F0aW9uO1xuXG5cdFx0bGV0IHNlYXJjaFF1ZXJ5ID0gJz8nO1xuXG5cdFx0aWYgKHNpZGViYXIpIHtcblx0XHRcdHNlYXJjaFF1ZXJ5ICs9IGAmc2lkZWJhcj0ke3NpZGViYXJ9YDtcblx0XHR9XG5cblx0XHRpZiAoZm9vdGVyKSB7XG5cdFx0XHRzZWFyY2hRdWVyeSArPSBgJnNpZGViYXI9JHtmb290ZXJ9YDtcblx0XHR9XG5cblx0XHRpZiAoYXBwc3dpdGNoZXIpIHtcblx0XHRcdHNlYXJjaFF1ZXJ5ICs9IGAmYXBwc3dpdGNoZXI9JHthcHBzd2l0Y2hlcn1gO1xuXHRcdH1cblxuXHRcdGlmIChyb3V0ZSkge1xuXHRcdFx0c2VhcmNoUXVlcnkgKz0gYCZyb3V0ZT0ke3JvdXRlfWA7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMucHJvcHMuaXNDb25uZWN0ZWQpIHtcblx0XHRcdHRoaXMucHJvcHMuZGlzY29ubmVjdEFwcCgpO1xuXHRcdFx0dGhpcy5wcm9wcy5zZXRNb2RlKE1PREVTLlZJRVcpO1xuXHRcdFx0dGhpcy5wcm9wcy5zZXRIZWFkZXJzKFtdKTtcblx0XHRcdC8vIHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0Ly8gXHRjdXN0b21IZWFkZXJzOiBbeyBrZXk6ICcnLCB2YWx1ZTogJycgfV0sXG5cdFx0XHQvLyBcdGFwcG5hbWU6ICcnLFxuXHRcdFx0Ly8gXHR1cmw6ICcnLFxuXHRcdFx0Ly8gfSk7XG5cdFx0XHR0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG5cdFx0XHRcdHNlYXJjaDogbm9ybWFsaXplU2VhcmNoUXVlcnkoc2VhcmNoUXVlcnkpLFxuXHRcdFx0fSk7XG5cdFx0XHQvLyB3aW5kb3cubG9jYXRpb24ucmVsb2FkKHRydWUpO1xuXHRcdH0gZWxzZSBpZiAoYXBwbmFtZSAmJiB1cmwpIHtcblx0XHRcdGlmIChzaG91bGRDb25uZWN0KHBhdGhuYW1lLCBhcHBuYW1lKSkge1xuXHRcdFx0XHR0aGlzLnByb3BzLmNvbm5lY3RBcHAoYXBwbmFtZSwgdXJsKTtcblx0XHRcdFx0dGhpcy5wcm9wcy5zZXRIZWFkZXJzKGN1c3RvbUhlYWRlcnMpO1xuXHRcdFx0XHQvLyB1cGRhdGUgaGlzdG9yeSB3aXRoIGNvcnJlY3QgYXBwbmFtZSBhbmQgdXJsXG5cdFx0XHRcdHNlYXJjaFF1ZXJ5ICs9IGAmYXBwbmFtZT0ke2FwcG5hbWV9JnVybD0ke3VybH0mbW9kZT0ke3RoaXMucHJvcHMubW9kZX1gO1xuXHRcdFx0XHRjb25zdCB7IHBhc3RBcHBzIH0gPSB0aGlzLnN0YXRlO1xuXHRcdFx0XHRjb25zdCBuZXdBcHBzID0gWy4uLnBhc3RBcHBzXTtcblxuXHRcdFx0XHRjb25zdCBwYXN0QXBwID0gcGFzdEFwcHMuZmluZChhcHAgPT4gYXBwLmFwcG5hbWUgPT09IGFwcG5hbWUpO1xuXG5cdFx0XHRcdGlmICghcGFzdEFwcCkge1xuXHRcdFx0XHRcdG5ld0FwcHMucHVzaCh7XG5cdFx0XHRcdFx0XHRhcHBuYW1lLFxuXHRcdFx0XHRcdFx0dXJsLFxuXHRcdFx0XHRcdFx0aGVhZGVyczogY3VzdG9tSGVhZGVycy5maWx0ZXIoXG5cdFx0XHRcdFx0XHRcdGl0ZW0gPT4gaXRlbS5rZXkudHJpbSgpICYmIGl0ZW0udmFsdWUudHJpbSgpLFxuXHRcdFx0XHRcdFx0KSxcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRjb25zdCBhcHBJbmRleCA9IG5ld0FwcHMuZmluZEluZGV4KFxuXHRcdFx0XHRcdFx0aXRlbSA9PiBpdGVtLmFwcG5hbWUgPT09IGFwcG5hbWUsXG5cdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdG5ld0FwcHNbYXBwSW5kZXhdID0ge1xuXHRcdFx0XHRcdFx0YXBwbmFtZSxcblx0XHRcdFx0XHRcdHVybCxcblx0XHRcdFx0XHRcdGhlYWRlcnM6IGN1c3RvbUhlYWRlcnMuZmlsdGVyKFxuXHRcdFx0XHRcdFx0XHRpdGVtID0+IGl0ZW0ua2V5LnRyaW0oKSAmJiBpdGVtLnZhbHVlLnRyaW0oKSxcblx0XHRcdFx0XHRcdCksXG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0XHRcdHBhc3RBcHBzOiBuZXdBcHBzLFxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRzZXRMb2NhbFN0b3JhZ2VEYXRhKFxuXHRcdFx0XHRcdExPQ0FMX0NPTk5FQ1RJT05TLFxuXHRcdFx0XHRcdEpTT04uc3RyaW5naWZ5KHtcblx0XHRcdFx0XHRcdHBhc3RBcHBzOiBuZXdBcHBzLFxuXHRcdFx0XHRcdH0pLFxuXHRcdFx0XHQpO1xuXHRcdFx0XHR0aGlzLnByb3BzLmhpc3RvcnkucHVzaCh7XG5cdFx0XHRcdFx0c2VhcmNoOiBub3JtYWxpemVTZWFyY2hRdWVyeShzZWFyY2hRdWVyeSksXG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdGlmICh0aGlzLnByb3BzLmlzSGlkZGVuKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXRBcHBTd2l0Y2hlcihmYWxzZSk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMucHJvcHMuc2V0RXJyb3Ioe1xuXHRcdFx0XHRcdG1lc3NhZ2U6XG5cdFx0XHRcdFx0XHQnU29ycnkgY2FuIG5vdCBjb25uZWN0IHRvIHRoZSBhcHAgd2l0aCBtdWx0aXBsZSBpbmRleGVzJyxcblx0XHRcdFx0XHRkZXNjcmlwdGlvbjogJ1BsZWFzZSB0cnkgdXNpbmcgc2luZ2xlIGluZGV4Jyxcblx0XHRcdFx0fSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG5cdGhhbmRsZVVybFRvZ2dsZSA9ICgpID0+IHtcblx0XHR0aGlzLnNldFN0YXRlKCh7IGlzVXJsSGlkZGVuIH0pID0+ICh7XG5cdFx0XHRpc1VybEhpZGRlbjogIWlzVXJsSGlkZGVuLFxuXHRcdH0pKTtcblx0fTtcblxuXHR0b2dnbGVIZWFkZXJzTW9kYWwgPSAoKSA9PiB7XG5cdFx0dGhpcy5zZXRTdGF0ZSgoeyBpc1Nob3dpbmdIZWFkZXJzTW9kYWwgfSkgPT4gKHtcblx0XHRcdGlzU2hvd2luZ0hlYWRlcnNNb2RhbDogIWlzU2hvd2luZ0hlYWRlcnNNb2RhbCxcblx0XHR9KSk7XG5cdH07XG5cblx0aGFuZGxlSGVhZGVySXRlbUNoYW5nZSA9IChlLCBpbmRleCwgZmllbGQpID0+IHtcblx0XHRjb25zdCB7XG5cdFx0XHR0YXJnZXQ6IHsgdmFsdWUgfSxcblx0XHR9ID0gZTtcblx0XHRjb25zdCB7IGN1c3RvbUhlYWRlcnMgfSA9IHRoaXMuc3RhdGU7XG5cblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdGN1c3RvbUhlYWRlcnM6IFtcblx0XHRcdFx0Li4uY3VzdG9tSGVhZGVycy5zbGljZSgwLCBpbmRleCksXG5cdFx0XHRcdHtcblx0XHRcdFx0XHQuLi5jdXN0b21IZWFkZXJzW2luZGV4XSxcblx0XHRcdFx0XHRbZmllbGRdOiB2YWx1ZSxcblx0XHRcdFx0fSxcblx0XHRcdFx0Li4uY3VzdG9tSGVhZGVycy5zbGljZShpbmRleCArIDEpLFxuXHRcdFx0XSxcblx0XHR9KTtcblx0fTtcblxuXHRoYW5kbGVIZWFkZXJzU3VibWl0ID0gKCkgPT4ge1xuXHRcdGNvbnN0IHsgY3VzdG9tSGVhZGVycyB9ID0gdGhpcy5zdGF0ZTtcblxuXHRcdGNvbnN0IGZpbHRlcmVkSGVhZGVycyA9IGN1c3RvbUhlYWRlcnMuZmlsdGVyKFxuXHRcdFx0aXRlbSA9PiBpdGVtLmtleS50cmltKCkgJiYgaXRlbS52YWx1ZS50cmltKCksXG5cdFx0KTtcblxuXHRcdGNvbnN0IHsgaXNDb25uZWN0ZWQgfSA9IHRoaXMucHJvcHM7XG5cblx0XHRpZiAoaXNDb25uZWN0ZWQpIHtcblx0XHRcdGNvbnN0IHsgcGFzdEFwcHMgfSA9IEpTT04ucGFyc2UoXG5cdFx0XHRcdGdldExvY2FsU3RvcmFnZUl0ZW0oTE9DQUxfQ09OTkVDVElPTlMpLFxuXHRcdFx0KTtcblxuXHRcdFx0Y29uc3QgY3VycmVudEFwcCA9IHBhc3RBcHBzLmZpbmRJbmRleChcblx0XHRcdFx0aXRlbSA9PiBpdGVtLmFwcG5hbWUgPT09IHRoaXMucHJvcHMuYXBwbmFtZSxcblx0XHRcdCk7XG5cdFx0XHRwYXN0QXBwc1tjdXJyZW50QXBwXS5oZWFkZXJzID0gZmlsdGVyZWRIZWFkZXJzO1xuXG5cdFx0XHRzZXRMb2NhbFN0b3JhZ2VEYXRhKFxuXHRcdFx0XHRMT0NBTF9DT05ORUNUSU9OUyxcblx0XHRcdFx0SlNPTi5zdHJpbmdpZnkoeyBwYXN0QXBwcyB9KSxcblx0XHRcdCk7XG5cdFx0fVxuXHRcdHRoaXMucHJvcHMuc2V0SGVhZGVycyhmaWx0ZXJlZEhlYWRlcnMpO1xuXHRcdHRoaXMudG9nZ2xlSGVhZGVyc01vZGFsKCk7XG5cdH07XG5cblx0aGFuZGxlSGVhZGVyQWZ0ZXJDbG9zZSA9ICgpID0+IHtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdGN1c3RvbUhlYWRlcnM6IHRoaXMucHJvcHMuaGVhZGVycy5sZW5ndGhcblx0XHRcdFx0PyB0aGlzLnByb3BzLmhlYWRlcnNcblx0XHRcdFx0OiBbeyBrZXk6ICcnLCB2YWx1ZTogJycgfV0sXG5cdFx0fSk7XG5cdH07XG5cblx0YWRkTW9yZUhlYWRlciA9ICgpID0+IHtcblx0XHRjb25zdCB7IGN1c3RvbUhlYWRlcnMgfSA9IHRoaXMuc3RhdGU7XG5cblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdGN1c3RvbUhlYWRlcnM6IFsuLi5jdXN0b21IZWFkZXJzLCB7IGtleTogJycsIHZhbHVlOiAnJyB9XSxcblx0XHR9KTtcblx0fTtcblxuXHRoYW5kbGVSZW1vdmVIZWFkZXIgPSBpbmRleCA9PiB7XG5cdFx0Y29uc3QgeyBjdXN0b21IZWFkZXJzIH0gPSB0aGlzLnN0YXRlO1xuXHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0Y3VzdG9tSGVhZGVyczogW1xuXHRcdFx0XHQuLi5jdXN0b21IZWFkZXJzLnNsaWNlKDAsIGluZGV4KSxcblx0XHRcdFx0Li4uY3VzdG9tSGVhZGVycy5zbGljZShpbmRleCArIDEpLFxuXHRcdFx0XSxcblx0XHR9KTtcblx0fTtcblxuXHRyZW5kZXIoKSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0YXBwbmFtZSxcblx0XHRcdHVybCxcblx0XHRcdHBhc3RBcHBzLFxuXHRcdFx0aXNTaG93aW5nQXBwU3dpdGNoZXIsXG5cdFx0XHRpc1VybEhpZGRlbixcblx0XHRcdGlzU2hvd2luZ0hlYWRlcnNNb2RhbCxcblx0XHRcdGN1c3RvbUhlYWRlcnMsXG5cdFx0fSA9IHRoaXMuc3RhdGU7XG5cdFx0Y29uc3QgeyBpc0xvYWRpbmcsIGlzQ29ubmVjdGVkIH0gPSB0aGlzLnByb3BzO1xuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXY+XG5cdFx0XHRcdHtpc1Nob3dpbmdBcHBTd2l0Y2hlciAmJiAoXG5cdFx0XHRcdFx0PEZvcm0gbGF5b3V0PVwiaW5saW5lXCIgb25TdWJtaXQ9e3RoaXMuaGFuZGxlU3VibWl0fT5cblx0XHRcdFx0XHRcdDxGbGV4IGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cblx0XHRcdFx0XHRcdFx0PEl0ZW1cblx0XHRcdFx0XHRcdFx0XHR7Li4uZm9ybUl0ZW1Qcm9wc31cblx0XHRcdFx0XHRcdFx0XHRjc3M9e3sgW21lZGlhTWluLm1lZGl1bV06IHsgZmxleDogMSB9IH19XG5cdFx0XHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFx0XHQ8R3JvdXBcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBhY3Rcblx0XHRcdFx0XHRcdFx0XHRcdGNzcz17eyBkaXNwbGF5OiAnZmxleCAhaW1wb3J0YW50JyB9fVxuXHRcdFx0XHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFx0XHRcdDxJbnB1dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRuYW1lPVwidXJsXCJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e3VybH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0cGxhY2Vob2xkZXI9XCJVUkwgZm9yIGNsdXN0ZXIgZ29lcyBoZXJlLiBlLmcuICBodHRwczovL3VzZXJuYW1lOnBhc3N3b3JkQHNjYWxyLmFwaS5hcHBiYXNlLmlvXCJcblx0XHRcdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2U9e3RoaXMuaGFuZGxlQ2hhbmdlfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRkaXNhYmxlZD17aXNDb25uZWN0ZWR9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJlcXVpcmVkXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNzcz17e1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNvbG9yOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0aXNVcmxIaWRkZW4gJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlzQ29ubmVjdGVkICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQndHJhbnNwYXJlbnQgIWltcG9ydGFudCcsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0XHRcdFx0PEJ1dHRvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRjc3M9e3tcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjdXJzb3I6ICdwb2ludGVyJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQnJjpob3Zlcic6IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJvcmRlckNvbG9yOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQnI2Q5ZDlkOSAhaW1wb3J0YW50Jyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRvbkNsaWNrPXt0aGlzLmhhbmRsZVVybFRvZ2dsZX1cblx0XHRcdFx0XHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PGlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjbGFzc05hbWU9e2BmYSAke1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0aXNVcmxIaWRkZW5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0PyAnZmEtZXllLXNsYXNoJ1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ6ICdmYS1leWUnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fWB9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L0J1dHRvbj5cblx0XHRcdFx0XHRcdFx0XHRcdDxCdXR0b25cblx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT1cImJ1dHRvblwiXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGNzcz17e1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCcmOmhvdmVyJzoge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ym9yZGVyQ29sb3I6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCcjZDlkOWQ5ICFpbXBvcnRhbnQnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2xpY2s9e3RoaXMudG9nZ2xlSGVhZGVyc01vZGFsfVxuXHRcdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRIZWFkZXJzXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L0J1dHRvbj5cblx0XHRcdFx0XHRcdFx0XHQ8L0dyb3VwPlxuXHRcdFx0XHRcdFx0XHQ8L0l0ZW0+XG5cdFx0XHRcdFx0XHRcdDxJdGVtXG5cdFx0XHRcdFx0XHRcdFx0ey4uLmZvcm1JdGVtUHJvcHN9XG5cdFx0XHRcdFx0XHRcdFx0Y3NzPXt7IFttZWRpYU1pbi5tZWRpdW1dOiB7IGZsZXg6IDAuMzUgfSB9fVxuXHRcdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdFx0PEF1dG9Db21wbGV0ZVxuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVNvdXJjZT17cGFzdEFwcHMubWFwKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRhcHAgPT4gYXBwLmFwcG5hbWUsXG5cdFx0XHRcdFx0XHRcdFx0XHQpfVxuXHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e2FwcG5hbWV9XG5cdFx0XHRcdFx0XHRcdFx0XHRwbGFjZWhvbGRlcj1cIkFwcG5hbWUgKGFrYSBpbmRleCkgZ29lcyBoZXJlXCJcblx0XHRcdFx0XHRcdFx0XHRcdGZpbHRlck9wdGlvbj17KGlucHV0VmFsdWUsIG9wdGlvbikgPT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0b3B0aW9uLnByb3BzLmNoaWxkcmVuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0LnRvVXBwZXJDYXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQuaW5kZXhPZihcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlucHV0VmFsdWUudG9VcHBlckNhc2UoKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpICE9PSAtMVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0b25DaGFuZ2U9e3RoaXMuaGFuZGxlQXBwTmFtZUNoYW5nZX1cblx0XHRcdFx0XHRcdFx0XHRcdGRpc2FibGVkPXtpc0Nvbm5lY3RlZH1cblx0XHRcdFx0XHRcdFx0XHQvPlxuXHRcdFx0XHRcdFx0XHQ8L0l0ZW0+XG5cblx0XHRcdFx0XHRcdFx0PEl0ZW0gY3NzPXt7IG1hcmdpblJpZ2h0OiAnMHB4ICFpbXBvcnRhbnQnIH19PlxuXHRcdFx0XHRcdFx0XHRcdDxCdXR0b25cblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9e2lzQ29ubmVjdGVkID8gJ2RhbmdlcicgOiAncHJpbWFyeSd9XG5cdFx0XHRcdFx0XHRcdFx0XHRodG1sVHlwZT1cInN1Ym1pdFwiXG5cdFx0XHRcdFx0XHRcdFx0XHRpY29uPXtcblx0XHRcdFx0XHRcdFx0XHRcdFx0aXNDb25uZWN0ZWRcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ/ICdwYXVzZS1jaXJjbGUnXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0OiAncGxheS1jaXJjbGUnXG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHRkaXNhYmxlZD17IShhcHBuYW1lICYmIHVybCl9XG5cdFx0XHRcdFx0XHRcdFx0XHRsb2FkaW5nPXtpc0xvYWRpbmd9XG5cdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0e2lzQ29ubmVjdGVkID8gJ0Rpc2Nvbm5lY3QnIDogJ0Nvbm5lY3QnfVxuXHRcdFx0XHRcdFx0XHRcdDwvQnV0dG9uPlxuXHRcdFx0XHRcdFx0XHQ8L0l0ZW0+XG5cdFx0XHRcdFx0XHRcdDxNb2RhbFxuXHRcdFx0XHRcdFx0XHRcdHZpc2libGU9e2lzU2hvd2luZ0hlYWRlcnNNb2RhbH1cblx0XHRcdFx0XHRcdFx0XHRvbkNhbmNlbD17dGhpcy50b2dnbGVIZWFkZXJzTW9kYWx9XG5cdFx0XHRcdFx0XHRcdFx0b25Paz17dGhpcy5oYW5kbGVIZWFkZXJzU3VibWl0fVxuXHRcdFx0XHRcdFx0XHRcdG1hc2tDbG9zYWJsZT17ZmFsc2V9XG5cdFx0XHRcdFx0XHRcdFx0ZGVzdHJveU9uQ2xvc2Vcblx0XHRcdFx0XHRcdFx0XHR0aXRsZT1cIkFkZCBDdXN0b20gSGVhZGVyc1wiXG5cdFx0XHRcdFx0XHRcdFx0Y3NzPXt7IHRvcDogMTAgfX1cblx0XHRcdFx0XHRcdFx0XHRjbG9zYWJsZT17ZmFsc2V9XG5cdFx0XHRcdFx0XHRcdFx0YWZ0ZXJDbG9zZT17dGhpcy5oYW5kbGVIZWFkZXJBZnRlckNsb3NlfVxuXHRcdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdFx0PGRpdlxuXHRcdFx0XHRcdFx0XHRcdFx0Y3NzPXt7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG1heEhlaWdodDogJzUwMHB4Jyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0b3ZlcmZsb3c6ICdhdXRvJyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0cGFkZGluZ1JpZ2h0OiAxMCxcblx0XHRcdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0PEZsZXggY3NzPXt7IG1hcmdpbkJvdHRvbTogMTAgfX0+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXZcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjc3M9e3tcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGZsZXg6IDEsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtYXJnaW5MZWZ0OiA1LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRLZXlcblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxkaXZcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjc3M9e3tcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1hcmdpbkxlZnQ6IDEwLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZmxleDogMSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0VmFsdWVcblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L0ZsZXg+XG5cdFx0XHRcdFx0XHRcdFx0XHR7Y3VzdG9tSGVhZGVycy5tYXAoKGl0ZW0sIGkpID0+IChcblx0XHRcdFx0XHRcdFx0XHRcdFx0PEZsZXhcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRrZXk9e2BoZWFkZXItJHtpfWB9IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjc3M9e3sgbWFyZ2luQm90dG9tOiAxMCB9fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PGRpdlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y3NzPXt7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGZsZXg6IDEsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1hcmdpbkxlZnQ6IDUsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdD5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxJbnB1dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR2YWx1ZT17aXRlbS5rZXl9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtlID0+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5oYW5kbGVIZWFkZXJJdGVtQ2hhbmdlKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQna2V5Jyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PGRpdlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y3NzPXt7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGZsZXg6IDEsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1hcmdpbkxlZnQ6IDEwLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fX1cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8SW5wdXRcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dmFsdWU9e2l0ZW0udmFsdWV9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG9uQ2hhbmdlPXtlID0+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5oYW5kbGVIZWFkZXJJdGVtQ2hhbmdlKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQndmFsdWUnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRjc3M9e3tcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWFyZ2luTGVmdDogMTAsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pbldpZHRoOiAxNSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0e2N1c3RvbUhlYWRlcnMubGVuZ3RoID4gMCAmJiAoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxJY29uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZT1cImNsb3NlXCJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvbkNsaWNrPXsoKSA9PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5oYW5kbGVSZW1vdmVIZWFkZXIoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGNzcz17e1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Y3Vyc29yOiAncG9pbnRlcicsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fX1cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdCl9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDwvRmxleD5cblx0XHRcdFx0XHRcdFx0XHRcdCkpfVxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0XHRcdDxCdXR0b25cblx0XHRcdFx0XHRcdFx0XHRcdGljb249XCJwbHVzXCJcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGU9XCJwcmltYXJ5XCJcblx0XHRcdFx0XHRcdFx0XHRcdGNzcz17eyBtYXJnaW5Ub3A6IDEwLCBtYXJnaW5MZWZ0OiA1IH19XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkNsaWNrPXt0aGlzLmFkZE1vcmVIZWFkZXJ9XG5cdFx0XHRcdFx0XHRcdFx0Lz5cblx0XHRcdFx0XHRcdFx0PC9Nb2RhbD5cblx0XHRcdFx0XHRcdDwvRmxleD5cblx0XHRcdFx0XHQ8L0Zvcm0+XG5cdFx0XHRcdCl9XG5cdFx0XHRcdHshaXNMb2FkaW5nICYmICFpc0Nvbm5lY3RlZCAmJiAoXG5cdFx0XHRcdFx0PEFsZXJ0XG5cdFx0XHRcdFx0XHR0eXBlPVwiaW5mb1wiXG5cdFx0XHRcdFx0XHRkZXNjcmlwdGlvbj17XG5cdFx0XHRcdFx0XHRcdDxSZWFjdC5GcmFnbWVudD5cblx0XHRcdFx0XHRcdFx0XHQ8ZGl2PlxuXHRcdFx0XHRcdFx0XHRcdFx0PGgzIHN0eWxlPXt7IG1hcmdpblRvcDogJzFyZW0nIH19PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRDb25uZWN0aW9uIFRpcHNcblx0XHRcdFx0XHRcdFx0XHRcdDwvaDM+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8dWw+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxsaT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRZb3UgY2FuIGNvbm5lY3QgdG8gYWxsIGluZGljZXMgYnlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwYXNzaW5nIGFuIDxjb2RlPio8L2NvZGU+IGluIHRoZSBhcHBcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRuYW1lIGlucHV0IGZpZWxkLlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8L2xpPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8bGk+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0WW91IGNhbiBhbHNvIGNvbm5lY3QgdG8gYSBzaW5nbGVcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpbmRleCBvciBtdWx0aXBsZSBpbmRpY2VzIGJ5IHBhc3Npbmdcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVtIGFzIGNvbW1hIHNlcGFyYXRlZCB2YWx1ZXM6IGUuZy5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpbmRleDEsaW5kZXgyLGluZGV4My5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9saT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PGxpPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdEF2b2lkIHVzaW5nIGEgdHJhaWxpbmcgc2xhc2h7JyAnfVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdDxjb2RlPi88L2NvZGU+IGFmdGVyIHRoZSBjbHVzdGVyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YWRkcmVzcy5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9saT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0PGxpPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFlvdXIgY2x1c3RlciBuZWVkcyB0byBoYXZlIENPUlNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRlbmFibGVkIGZvciB0aGUgb3JpZ2luIHdoZXJlIERlamF2dVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlzIHJ1bm5pbmcuIFNlZSBiZWxvdyBmb3IgbW9yZSBvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDwvbGk+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L3VsPlxuXHRcdFx0XHRcdFx0XHRcdFx0PGgzPkNPUlMgU2V0dGluZ3M8L2gzPlxuXHRcdFx0XHRcdFx0XHRcdFx0PHA+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFRvIG1ha2Ugc3VyZSB5b3UgaGF2ZSBlbmFibGVkIENPUlNcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2V0dGluZ3MgZm9yIHlvdXIgRWxhc3RpY1NlYXJjaFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpbnN0YW5jZSwgYWRkIHRoZSBmb2xsb3dpbmcgbGluZXMgaW4gdGhlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdEVTIGNvbmZpZ3VyYXRpb24gZmlsZTpcblx0XHRcdFx0XHRcdFx0XHRcdDwvcD5cblx0XHRcdFx0XHRcdFx0XHRcdDxwcmU+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHtgaHR0cC5wb3J0OiA5MjAwXG5odHRwLmNvcnMuYWxsb3ctb3JpZ2luOiBodHRwOi8vbG9jYWxob3N0OjEzNTgsaHR0cDovLzEyNy4wLjAuMToxMzU4XG5odHRwLmNvcnMuZW5hYmxlZDogdHJ1ZVxuaHR0cC5jb3JzLmFsbG93LWhlYWRlcnMgOiBYLVJlcXVlc3RlZC1XaXRoLFgtQXV0aC1Ub2tlbixDb250ZW50LVR5cGUsQ29udGVudC1MZW5ndGgsQXV0aG9yaXphdGlvblxuaHR0cC5jb3JzLmFsbG93LWNyZWRlbnRpYWxzOiB0cnVlYH1cblx0XHRcdFx0XHRcdFx0XHRcdDwvcHJlPlxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0XHRcdDxkaXYgc3R5bGU9e3sgbWFyZ2luVG9wOiAnMnJlbScgfX0+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8cD5cblx0XHRcdFx0XHRcdFx0XHRcdFx0SWYgeW91IGFyZSBydW5uaW5nIEVsYXN0aWNTZWFyY2ggdmlhXG5cdFx0XHRcdFx0XHRcdFx0XHRcdERvY2tlciwgdXNlIHRoZSBmb2xsb3dpbmcgY29tbWFuZDpcblx0XHRcdFx0XHRcdFx0XHRcdDwvcD5cblx0XHRcdFx0XHRcdFx0XHRcdDxkaXZcblx0XHRcdFx0XHRcdFx0XHRcdFx0c3R5bGU9e3tcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRiYWNrZ3JvdW5kOiAnI2ZlZmVmZScsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cGFkZGluZzogJzhweCcsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH19XG5cdFx0XHRcdFx0XHRcdFx0XHQ+XG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxjb2RlPlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRvY2tlciBydW4gLS1uYW1lIGVzIC1kIC1wIDkyMDA6OTIwMFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC1lIGh0dHAucG9ydD05MjAwIC1lXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aHR0cC5jb3JzLmVuYWJsZWQ9dHJ1ZSAtZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGh0dHAuY29ycy5hbGxvdy1vcmlnaW49aHR0cDovL2xvY2FsaG9zdDoxMzU4LGh0dHA6Ly8xMjcuMC4wLjE6MTM1OFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC1lXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aHR0cC5jb3JzLmFsbG93LWhlYWRlcnM9WC1SZXF1ZXN0ZWQtV2l0aCxYLUF1dGgtVG9rZW4sQ29udGVudC1UeXBlLENvbnRlbnQtTGVuZ3RoLEF1dGhvcml6YXRpb25cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQtZSBodHRwLmNvcnMuYWxsb3ctY3JlZGVudGlhbHM9dHJ1ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRvY2tlci5lbGFzdGljLmNvL2VsYXN0aWNzZWFyY2gvZWxhc3RpY3NlYXJjaC1vc3M6Ni43LjJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PC9jb2RlPlxuXHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8cCBzdHlsZT17eyBtYXJnaW5Ub3A6ICcxNHB4JyB9fT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0T3IgdGhlIGZvbGxvd2luZyBpZiB5b3UgYXJlIHVzaW5nIHY3XG5cdFx0XHRcdFx0XHRcdFx0XHRcdEVsYXN0aWNTZWFyY2g6XG5cdFx0XHRcdFx0XHRcdFx0XHQ8L3A+XG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHN0eWxlPXt7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YmFja2dyb3VuZDogJyNmZWZlZmUnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBhZGRpbmc6ICc4cHgnLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9fVxuXHRcdFx0XHRcdFx0XHRcdFx0PlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8Y29kZT5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkb2NrZXIgcnVuIC1kIC0tcm0gLS1uYW1lXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZWxhc3RpY3NlYXJjaCAtcCA5MjAwOjkyMDAgLXBcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQ5MzAwOjkzMDAgLWVcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkaXNjb3ZlcnkudHlwZT1zaW5nbGUtbm9kZSAtZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGh0dHAuY29ycy5lbmFibGVkPXRydWUgLWVcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRodHRwLmNvcnMuYWxsb3ctb3JpZ2luPWh0dHA6Ly9sb2NhbGhvc3Q6MTM1OCxodHRwOi8vMTI3LjAuMC4xOjEzNThcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQtZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGh0dHAuY29ycy5hbGxvdy1oZWFkZXJzPVgtUmVxdWVzdGVkLVdpdGgsWC1BdXRoLVRva2VuLENvbnRlbnQtVHlwZSxDb250ZW50LUxlbmd0aCxBdXRob3JpemF0aW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0LWUgaHR0cC5jb3JzLmFsbG93LWNyZWRlbnRpYWxzPXRydWVcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkb2NrZXIuZWxhc3RpYy5jby9lbGFzdGljc2VhcmNoL2VsYXN0aWNzZWFyY2gtb3NzOjcuMC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDwvY29kZT5cblx0XHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHRcdFx0XHQ8L1JlYWN0LkZyYWdtZW50PlxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8+XG5cdFx0XHRcdCl9XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG5cbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IChzdGF0ZSwgcHJvcHMpID0+IHtcblx0Y29uc3QgZ2V0VVJMID0gKCkgPT4ge1xuXHRcdGlmIChnZXRVcmwoc3RhdGUpKSByZXR1cm4gZ2V0VXJsKHN0YXRlKTtcblx0XHRpZiAocHJvcHMudXJsICYmIHByb3BzLnVybC50cmltKCkgIT09ICcnKSByZXR1cm4gcHJvcHMudXJsO1xuXHRcdGlmIChwcm9wcy5jcmVkZW50aWFscylcblx0XHRcdHJldHVybiBgaHR0cHM6Ly8ke3Byb3BzLmNyZWRlbnRpYWxzfUBzY2Fsci5hcGkuYXBwYmFzZS5pb2A7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH07XG5cdHJldHVybiB7XG5cdFx0YXBwbmFtZTogZ2V0QXBwbmFtZShzdGF0ZSkgfHwgcHJvcHMuYXBwLFxuXHRcdHVybDogZ2V0VVJMKCksXG5cdFx0aXNDb25uZWN0ZWQ6IGdldElzQ29ubmVjdGVkKHN0YXRlKSxcblx0XHRpc0xvYWRpbmc6IGdldElzTG9hZGluZyhzdGF0ZSksXG5cdFx0bW9kZTogZ2V0TW9kZShzdGF0ZSksXG5cdFx0aGVhZGVyczogZ2V0SGVhZGVycyhzdGF0ZSksXG5cdH07XG59O1xuXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSB7XG5cdGNvbm5lY3RBcHAsXG5cdGRpc2Nvbm5lY3RBcHAsXG5cdHNldE1vZGUsXG5cdHNldEVycm9yLFxuXHRzZXRIZWFkZXJzLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgd2l0aFJvdXRlcihcblx0Y29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQ29ubmVjdEFwcCksXG4pO1xuIl19 */\")},\"Value\")),customHeaders.map((item,i)=>_react.default.createElement(_Flex.default,{key:\"header-\".concat(i)// eslint-disable-line\n,className:(0,_emotion.css)({marginBottom:10},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),alignItems:\"center\"},_react.default.createElement(\"div\",{className:(0,_emotion.css)({flex:1,marginLeft:5},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},_react.default.createElement(_input.default,{value:item.key,onChange:e=>this.handleHeaderItemChange(e,i,'key')})),_react.default.createElement(\"div\",{className:(0,_emotion.css)({flex:1,marginLeft:10},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},_react.default.createElement(_input.default,{value:item.value,onChange:e=>this.handleHeaderItemChange(e,i,'value')})),_react.default.createElement(\"div\",{className:(0,_emotion.css)({marginLeft:10,minWidth:15},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")},customHeaders.length>0&&_react.default.createElement(_icon.default,{type:\"close\",onClick:()=>this.handleRemoveHeader(i),className:(0,_emotion.css)({cursor:'pointer'},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")}))))),_react.default.createElement(_button.default,{icon:\"plus\",type:\"primary\",className:(0,_emotion.css)({marginTop:10,marginLeft:5},\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"),onClick:this.addMoreHeader})))),!isLoading&&!isConnected&&_react.default.createElement(_alert.default,{type:\"info\",description:_react.default.createElement(_react.default.Fragment,null,_react.default.createElement(\"div\",null,_react.default.createElement(\"h3\",{style:{marginTop:'1rem'}},\"Connection Tips\"),_react.default.createElement(\"ul\",null,_react.default.createElement(\"li\",null,\"You can connect to all indices by passing an \",_react.default.createElement(\"code\",null,\"*\"),\" in the app name input field.\"),_react.default.createElement(\"li\",null,\"You can also connect to a single index or multiple indices by passing them as comma separated values: e.g. index1,index2,index3.\"),_react.default.createElement(\"li\",null,\"Avoid using a trailing slash\",' ',_react.default.createElement(\"code\",null,\"/\"),\" after the cluster address.\"),_react.default.createElement(\"li\",null,\"Your cluster needs to have CORS enabled for the origin where Dejavu is running. See below for more on that.\")),_react.default.createElement(\"h3\",null,\"CORS Settings\"),_react.default.createElement(\"p\",null,\"To make sure you have enabled CORS settings for your ElasticSearch instance, add the following lines in the ES configuration file:\"),_react.default.createElement(\"pre\",null,\"http.port: 9200\\nhttp.cors.allow-origin: http://localhost:1358,http://127.0.0.1:1358\\nhttp.cors.enabled: true\\nhttp.cors.allow-headers : X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization\\nhttp.cors.allow-credentials: true\")),_react.default.createElement(\"div\",{style:{marginTop:'2rem'}},_react.default.createElement(\"p\",null,\"If you are running ElasticSearch via Docker, use the following command:\"),_react.default.createElement(\"div\",{style:{background:'#fefefe',padding:'8px'}},_react.default.createElement(\"code\",null,\"docker run --name es -d -p 9200:9200 -e http.port=9200 -e http.cors.enabled=true -e http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358 -e http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization -e http.cors.allow-credentials=true docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.2\")),_react.default.createElement(\"p\",{style:{marginTop:'14px'}},\"Or the following if you are using v7 ElasticSearch:\"),_react.default.createElement(\"div\",{style:{background:'#fefefe',padding:'8px'}},_react.default.createElement(\"code\",null,\"docker run -d --rm --name elasticsearch -p 9200:9200 -p 9300:9300 -e discovery.type=single-node -e http.cors.enabled=true -e http.cors.allow-origin=http://localhost:1358,http://127.0.0.1:1358 -e http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization -e http.cors.allow-credentials=true docker.elastic.co/elasticsearch/elasticsearch-oss:7.0.1\"))))}));}}const mapStateToProps=(state,props)=>{const getURL=()=>{if((0,_app.getUrl)(state))return(0,_app.getUrl)(state);if(props.url&&props.url.trim()!=='')return props.url;if(props.credentials)return\"https://\".concat(props.credentials,\"@scalr.api.appbase.io\");return null;};return{appname:(0,_app.getAppname)(state)||props.app,url:getURL(),isConnected:(0,_app.getIsConnected)(state),isLoading:(0,_app.getIsLoading)(state),mode:(0,_mode.getMode)(state),headers:(0,_app.getHeaders)(state)};};const mapDispatchToProps={connectApp:_actions.connectApp,disconnectApp:_actions.disconnectApp,setMode:_actions.setMode,setError:_actions.setError,setHeaders:_actions.setHeaders};var _default=(0,_reactRouterDom.withRouter)((0,_reactRedux.connect)(mapStateToProps,mapDispatchToProps)(ConnectApp));exports.default=_default;\n\n//# sourceURL=webpack:///../browser/lib/components/ConnectApp/ConnectApp.js?");

/***/ })

})